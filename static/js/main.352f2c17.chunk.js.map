{"version":3,"sources":["components/firebase.js","components/Target.js","components/Timer.js","components/SubmitScore.js","App.js","Leaderboard.js","components/Navbar.js","Routes.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Target","clientPos","getChoice","characters","positionTargetX","left","positionTargetY","top","id","style","display","position","map","char","width","onClick","name","Timer","gameOver","runTimer","time","useEffect","interval","setInterval","clearInterval","SubmitScore","submitToLeaderboard","getPlayerName","type","onChange","placeholder","required","to","App","useState","target","setTarget","viewImg","setViewImg","undefined","setClientPos","locURL","setLocURL","setCharacters","setGameOver","setTime","snackbar","setSnackbar","checkChoice","setCheckChoice","playerName","setPlayerName","db","firestore","storage","getChars","a","characterInfoArr","ref","collection","get","data","docs","doc","push","console","log","message","getImage","child","getDownloadURL","length","popSnackBar","choice","setTimeout","add","player","e","value","src","alt","rect","getBoundingClientRect","x","parseInt","clientX","y","clientY","find","textContent","posX","posY","newCharactersArr","filter","Leaderboard","currentLeaderboard","setCurrLeaderboard","leaderboardData","orderBy","getLeaderboard","margin","uniqid","Navbar","window","location","pathname","currPath","setCurrPath","Routes","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.352f2c17.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/storage'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDIK7_x9OvvcJKsmodofUhwhs5vq5PZR40\",\n    authDomain: \"wheres-wally-63813.firebaseapp.com\",\n    projectId: \"wheres-wally-63813\",\n    storageBucket: \"wheres-wally-63813.appspot.com\",\n    messagingSenderId: \"284119324952\",\n    appId: \"1:284119324952:web:2313b2e3a199c51dd4e66d\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase","import '../styles/Target.css'\n\nconst Target = ({ clientPos, getChoice, characters }) => {\n    const positionTargetX = clientPos[0] + clientPos[2].left - 20\n    const positionTargetY = clientPos[1] + clientPos[2].top - 20\n    return (\n        <div id=\"targetBox\" style={{ top: `${positionTargetY}px`, left: `${positionTargetX}px` }}>\n            <div style={{ display: 'grid', position: \"fixed\", top: `${positionTargetY + 47}px`, left: `${positionTargetX - 10}px` }}>\n                {characters.map((char) => {\n                    return (\n                        <div key={char.name}>\n                            <button style={{ width: '100%' }} onClick={getChoice}>{char.name}</button>\n                        </div>\n                    )\n                })}\n            </div >\n        </div >\n    )\n}\n\nexport default Target","import { useEffect } from 'react'\nconst Timer = ({ gameOver, runTimer, time }) => {\n\n    useEffect(() => {\n        if (!gameOver) {\n            const interval = setInterval(() => {\n                runTimer()\n            }, 1000)\n            return () => {\n                clearInterval(interval);\n            };\n        }\n    })\n\n    return (\n        <h1 id=\"timer\">{time} secs</h1>\n    )\n}\n\nexport default Timer","import { Link } from \"react-router-dom\"\n\nconst SubmitScore = ({ submitToLeaderboard, getPlayerName, time }) => {\n    return (\n        <div id=\"modal\">\n            <div id=\"submitBox\">\n                <h3>Your Time: {time} secs</h3>\n                <input type='text' onChange={getPlayerName} placeholder=\"Player Name\" required />\n                <Link to=\"/Leaderboard\">\n                    <button onClick={submitToLeaderboard}>Submit</button>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default SubmitScore","import { useEffect, useState } from 'react'\nimport firebase from './components/firebase'\nimport Target from './components/Target'\nimport Timer from './components/Timer'\nimport SubmitScore from './components/SubmitScore'\nimport '../src/styles/App.css'\n\nfunction App() {\n\n  const [target, setTarget] = useState(false)\n  const [viewImg, setViewImg] = useState(false)\n  const [clientPos, setClientPos] = useState([undefined])\n  const [locURL, setLocURL] = useState('')\n  const [characters, setCharacters] = useState([0])\n  const [gameOver, setGameOver] = useState(null)\n  const [time, setTime] = useState(0)\n  const [snackbar, setSnackbar] = useState(false)\n  const [checkChoice, setCheckChoice] = useState(undefined)\n  const [playerName, setPlayerName] = useState('Anon')\n\n  useEffect(() => {\n    const db = firebase.firestore()\n    const storage = firebase.storage()\n\n    const getChars = async () => {\n      try {\n        const characterInfoArr = []\n        const ref = db.collection('characters')\n        const data = await ref.get()\n        for (const doc of data.docs) {\n          characterInfoArr.push(doc.data())\n        }\n        setCharacters(characterInfoArr)\n      } catch (err) {\n        console.log(err.message)\n      }\n    }\n\n    const getImage = async () => {\n      try {\n        const ref = storage.ref().child('Easy.jpeg')\n        const data = await ref.getDownloadURL()\n        setLocURL(data)\n        setViewImg(true)\n      } catch (err) {\n        console.log(err.message)\n      }\n    }\n    getChars()\n    getImage()\n    setGameOver(false)\n  }, [])\n\n\n  useEffect(() => {\n    if (!gameOver) {\n      return characters.length === 0 ? setGameOver(true) : gameOver\n    }\n  }, [gameOver, characters.length])\n\n  const displayDiv = (e) => {\n    const rect = e.target.getBoundingClientRect() //Method to get the size and position of an element's bounding box, relative to the viewport.\n    const x = parseInt(e.clientX - rect.left)\n    const y = parseInt(e.clientY - rect.top)\n    setClientPos([x, y, rect])\n    setTarget(true)\n  }\n\n  const getChoice = (e) => {\n    const choice = characters.find((char) => char.name === e.target.textContent)\n\n    if (clientPos[0] > choice.posX - 20 && clientPos[0] < choice.posX + 20 && clientPos[1] > choice.posY - 20 && clientPos[1] < choice.posY + 20) {\n      const newCharactersArr = characters.filter((char) => char !== choice)\n      setCharacters(newCharactersArr)\n      setTarget(false)\n      popSnackBar(`You Found ${choice.name}!`)\n    } else {\n      setTarget(false)\n      popSnackBar('Wrong! Try Again')\n    }\n  }\n\n  const runTimer = () => {\n    setTime(time + 1)\n  }\n\n  const popSnackBar = (choice) => {\n    setSnackbar(true)\n    setCheckChoice(choice)\n    setTimeout(() => {\n      setSnackbar(false)\n    }, 1500)\n  }\n\n  const updateLeaderboard = () => {\n    firebase.firestore().collection('leaderboard').add({\n      player: playerName,\n      time: time\n    })\n  }\n\n  const submitToLeaderboard = () => {\n    updateLeaderboard()\n  }\n\n  const getPlayerName = (e) => {\n    e.target.value === \"\" ? setPlayerName('Anon') : setPlayerName(e.target.value)\n  }\n\n  return (\n    <div id=\"container\">\n      {gameOver && <SubmitScore submitToLeaderboard={submitToLeaderboard} getPlayerName={getPlayerName} time={time} />}\n      <div id=\"gameScreen\">\n        {snackbar && <h3 id=\"checkChoice\">{checkChoice}</h3>}\n        {viewImg && <img src={locURL} alt=\"wally\" width='1400px' onClick={displayDiv} />}\n        {target && <Target clientPos={clientPos} getChoice={getChoice} characters={characters} />}\n      </div>\n      {viewImg && <Timer gameOver={gameOver} runTimer={runTimer} time={time} />}\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react'\nimport firebase from './components/firebase'\nimport uniqid from 'uniqid'\n\nconst Leaderboard = () => {\n    const [currentLeaderboard, setCurrLeaderboard] = useState([])\n\n    useEffect(() => {\n        const getLeaderboard = async () => {\n            try {\n                const leaderboardData = []\n                const db = firebase.firestore()\n                const ref = db.collection(\"leaderboard\")\n                    .orderBy(\"time\", \"asc\")\n                const data = await ref.get()\n                data.docs.map((doc) => {\n                    return leaderboardData.push(doc.data())\n                })\n                setCurrLeaderboard(leaderboardData)\n            } catch (err) {\n                console.log(err.message)\n            }\n        }\n        getLeaderboard()\n    }, [])\n\n    return (\n        <div id=\"leaderboard\">\n            <h2 style={{ margin: '0' }}>Leaderboard</h2>\n            <hr />\n            {currentLeaderboard.length > 0\n                ? currentLeaderboard.map((player) => {\n                    return (\n                        <div key={uniqid()}>\n                            <h3>{player.player}</h3>\n                            <h3>{player.time} secs</h3>\n                            <hr />\n                        </div>\n                    )\n                })\n                : <div>\n                    <h1>Empty</h1>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default Leaderboard","import { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport '../styles/Navbar.css'\n\nconst Navbar = () => {\n    const [currPath, setCurrPath] = useState(window.location.pathname)\n\n    const setPath = () => {\n        setCurrPath(window.location.pathname)\n    }\n\n    return (\n        <div id='navbar'>\n            <h1 id=\"title\">Where's Wally & Friends</h1>\n            <h2 onClick={setPath}>{currPath === '/wheres-wally' || currPath === '/wheres-wally/' ? <Link id=\"links\" to=\"/Leaderboard\">Leaderboard</Link> : <Link id=\"links\" to=\"/wheres-wally\">Play</Link>}</h2>\n        </div>\n    )\n}\n\nexport default Navbar","\nimport React from 'react'\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport App from './App';\nimport Leaderboard from './Leaderboard'\nimport Navbar from './components/Navbar';\n\nconst Routes = () => {\n    return (\n        <div id=\"mainDiv\">\n            <BrowserRouter>\n                <Navbar />\n                <Switch>\n                    <Route exact path=\"/wheres-wally\" >\n                        <App />\n                    </Route>\n                    <Route exact path=\"/leaderboard\">\n                        <Leaderboard />\n                    </Route>\n                </Switch>\n            </BrowserRouter>\n        </div>\n    )\n}\n\nexport default Routes","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes'\nimport '../src/styles/index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}